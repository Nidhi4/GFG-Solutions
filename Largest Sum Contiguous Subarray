// C++ program to print largest contiguous array sum 
#include<iostream> 
#include<climits> 
using namespace std; 

int maxSubArraySum(int a[], int size) 
{ 
   int max_so_far = 0 ;
   int max_ending_here = 0 ; 
   
   for (int i = 0; i < size; i++) 
   { 
       max_ending_here = max_ending_here + a[i]; 
       if (max_ending_here < 0) 
           max_ending_here = 0; 
  
       /* Do not compare for all elements. Compare only    
          when  max_ending_here > 0 */
          
       else if (max_so_far < max_ending_here) 
           max_so_far = max_ending_here; 
   } 
   return max_so_far; 
} 

/*Driver program to test maxSubArraySum*/
int main() 
{ 
    int a[] = {-2, -3, 4, -1, -2, 1, 5, -3}; 
    int n = sizeof(a)/sizeof(a[0]); 
    int max_sum = maxSubArraySum(a, n); 
    cout << "Maximum contiguous sum is " << max_sum; 
    return 0; 
} 
//********************************************************

#include <stdio.h>
int sum (int *arr, int n) ;
int main (void)
{
	int n = 0 ;
	int *arr ;
	int i = 0 ;

	printf("Enter length = ") ;
	scanf("%d", &n) ;

	for(i=0 ; i<n ; ++i)
	{
		scanf("%d", &arr[i]) ;
	}

	printf("Sum = %d ", sum(arr, n)) ;

	return 0 ;
}

int sum (int *arr, int n)
{
	int i = 0 ;
	int sum_so_far = 0 ;
	int sum_ends = 0 ;

	for(i=0 ; i<n ; ++i)
	{
		sum_ends = sum_ends + arr[i] ;

		if(sum_ends < 0)
		{
			sum_ends = 0 ;
		}
		else if(sum_so_far < sum_ends)
		{
			sum_so_far = sum_ends ;
		}
	}

	return sum_so_far ;
}


